<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.manager.Managers">
	<select id="getManagerByEmail" parameterType="string" resultType="domain.user.User">
		SELECT user.id AS id,user.email AS email,user.name AS NAME,user.password AS PASSWORD,user.timestamp AS TIMESTAMP,user.quote AS QUOTE,user.locked AS locked,user.pictureURL AS pictureURL,userrole.roleID AS userRole
		FROM USER INNER JOIN userrole ON userrole.userID=user.id
		WHERE user.email=#{_parameter} AND roleID=1
	</select>
	<update id="updateManagerStatus" parameterType="string" >
		update user set locked=true where id=#{_parameter}
	</update>
	
	<update id="updateManagerMessage" parameterType="dto.manager.UpdateManagerInput">
		update user set email=#{email},name=#{name},quote=#{quote},pictureURL=#{pictureURL} where id=#{managerID}
	</update>
	
	<select id="getUserByCondition" parameterType="string" resultType="dto.manager.UserSearchResult" useCache="false" flushCache="true">
		select id as userID,name as userName,locked as userStatus,pictureURL as userPicture,account as userAccount from account inner join user on account.userID=user.id
		where user.id=#{_parameter} or user.email=#{_parameter} or user.name=#{_parameter}
	</select>
	
	<update id="updateUserMessage" parameterType="dto.manager.UserSearchResult" >
		update user set name=#{userName},locked=#{userStatus}  where user.id=#{userID}
	</update>
	
	<update id="updateUserAccount" parameterType="dto.manager.UserSearchResult">
		update account set account=#{userAccount} where userID=#{userID}
	</update>
	
	<select id="getEssayByCondition" parameterType="dto.eassy.SearchEassyCondition" resultType="dto.eassy.ManagerEssay">
		select essay.id as eassyID,userID as eassyPersonID, essay.pictureURL as eassyPicture,essayHeader as eassyHeader,country as eassyCountry,context as eassyContent,name as eassyPersonName
		,user.pictureURL as eassyPersonPicture,state as eassyState,(select count(*)  from essaycomment where essay.id=essaycomment.essayID) as eassyCommentCount
		from essay inner join user on user.id=essay.userID
		<where>
			<choose>
				<when test="condition!=null and condition != '' ">
					essay.id=#{condition} or essay.essayHeader = #{condition}
				</when>
				<otherwise>
					essay.managerState=false
				</otherwise>
			</choose>
		</where>
		order by time desc
		limit #{start},#{showLimit}
	</select>
	
	<select id="getEssayPageNumber"  parameterType="dto.eassy.SearchEassyCondition" resultType="_int">
		select CEIL(count(*)/#{showLimit})
		from essay
		<where>
			<choose>
				<when test=" condition!=null and conditon !='' ">
					id=#{condition} or essayHeader = #{condition}
				</when>
				<otherwise>
					essay.state=false
				</otherwise>
			</choose>
		</where>
		order by time desc
	</select>
	
	<update id="updateEssayByManager" parameterType="dto.eassy.EssayUpdateInput">
		update essay set state=#{state},validate=#{validate},managerState=true where id=#{id}
	</update>
	
	<select id="getCommentByCommentID" parameterType="dto.comment.CommentComplainSearchInput" resultType="dto.comment.ManagerComment">
		SELECT essayComment.context AS commentContext,complain.commentID AS commentId,essay.essayHeader AS essayHeader,essay.id AS essayID
		FROM complain INNER JOIN essayComment ON complain.commentId=essayComment.id INNER JOIN essay ON essay.id=essayComment.essayID
		WHERE complain.state=false
		ORDER BY complain.commentID desc
		limit #{start},#{showLimit}
	</select>
	<select id="getComplainPageNumber" parameterType="dto.comment.CommentComplainSearchInput" resultType="_int">
		select CEIL(count(*)/#{showLimit})
		FROM complain INNER JOIN essayComment ON complain.commentId=essayComment.id INNER JOIN essay ON essay.id=essayComment.essayID
		WHERE complain.state=false
	</select>
	<delete id="deleteComment" parameterType="_int" >
		delete from essayComment where id=#{_parameter}
	</delete>
	
	<update id="updateComplainState" parameterType="_int">
		update complain set state=true where commentID=#{_parameter}
	</update>
	
</mapper>
